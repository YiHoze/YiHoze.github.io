************
문서화 설정
************

conf.py
========

문서 디렉토리마다 문서 형성을 위한 설정 파일인 conf.py가 있어야 한다. 각 설정 파일의 상당 부분이 서로 동일하다. 스타일의 일관성을 위해 공통 설정 파일로서 conf_common.py가 modules 디렉토리에 만들어졌다. conf_common.py를 참조하도록 파일 경로를 아래 예와 같이 지정한다.

::

  docs_folder = "d:/pyFlutter/docs"
  sys.path.append(abspath(join(docs_folder, "modules")))

conf_common.py
===============

MathJax 경로
-------------

필요하다면 :index:`MathJax`\ 의 설치 경로를 가리키는 옵션을 실제와 일치하도록 설정하라.

::

  mathjax_path = 'file://c:/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML'

이것은 생성된 모든 HTML 파일에서 다음과 같이 나타난다.

::

  <script type="text/javascript" src="file://d:/pyFlutter/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

MathJax가 다른 드라이브에 설치되어 있는 컴퓨터에 HTML 파일들을 복사한다면 수식이 제대로 표현되지 않는 문제가 발생한다.
이 문제를 피하기 위해 다음과 같은 방법이 고안되었다.


::

  mathjax_path = "MathJaxPath.js"

HTML 문서가 생성될 때 dosc\\_static 디렉토리에 있는 :index:`MathJaxPath.js`  파일이 _build\\html\\_static 디렉토리에 복사된다.
MathJax 경로가 바뀌었다면 이 파일을 열고 아래와 같은 줄을 수정하라.

::

  loadjs("file://c:/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML")

가장 이상적인 방법은 인터넷을 통해 MathJax를 이용하는 것이다.
인터넷 연결이 허용된다면 다음과 같이 설정하라.

::

  mathjax_path = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML'

한국어 로캘
------------

HTML 테마로서 사용된 sphinx_rtd_theme은 일부 문자열에서 다른 테마들이 사용하는 것과 다른 표현을 사용하고 있다. 예를 들어, 이 테마는 다음 페이지로 연결하는 버튼의 라벨에 "Next" 대신 소문자로 시작하는 "next"를 사용하지만 기존 :index:`한국어 로캘`\ (\ :index:`locale`\ )에는 "next"에 대한 것이 정의되어 있지 않다. 이를 보완하기 위하여 로캘 디렉토리가 다음과 같이 설정되었다.

::

  locale_dirs = ['../locale']

이 디렉토리에 있는 (스핑크스의 한국어 로캘 디렉토리로부터 복사된) :index:`sphinx.po` 파일에 한국어 문자열들이 정의되어 있다. 이 파일에 새로운 문자열들이 추가되었고 몇몇 문자열들이 다른 것으로 바뀌었다.

::

  #: sphinx/builders/html.py:377
  msgid "next"
  msgstr "다음"

  msgid "Next"
  msgstr "다음"

스핑크스가 실제로 사용하는 것은 sphinx.po 파일이 아니라 바이너리 파일인 :index:`sphinx.mo`\ 이다. 스핑크스는 문서 생성을 시작하기 전에 sphinx.po 파일이 변경되어 있는지 확인하고, 그렇다면 그것을 컴파일하여 sphinx.mo를 다시 만든다.

HTML 스타일
------------

HTML 문서에서 텍스트는 단어, 문장, 또는 문단 수준의 특정한 요소(element)로서 정의되고, 각 요소에 대응하는 스타일에 의해 표현된다. 하나의 스타일에는 폰트와 색상을 비롯하여 시각적 구현에 포함되는 여러 특징들이 설정되어 있다. 스타일들의 대부분은 theme.css 파일에 정의되어 있다. 다르게 정의한 :index:`css` 파일을 추가함으로써 스타일들의 일부를 변경할 수 있다.

::

  html_static_path = [abspath(join(docs_folder, "_static"))]
  html_context = {'css_files': ['_static/custom.css']}

예를 들어, custom.css에서 경고문 상자의 여백이 다음과 같이 조정되었다.

::

  .rst-content .admonition {
    margin-top: 10px;
    margin-bottom: 10px;
    padding: 0px 12px 5px 12px;
  }  

HTML 템플릿
------------

HTML 문서를 생성할 때 템플릿 경로로서 지정된 (각 문서 디렉토리 아래에) 디렉토리에 있는 모든 템플릿 파일들이 원래 템플릿 파일들과 더불어 사용된다. 아래 예에서 둘째 경로는 레이텍 템플릿이 포함된 디렉토리를 가리킨다.

::

  templates_path = ['_templates', abspath(join(docs_folder, '_templates'))]


이 디렉토리에는 있는 :index:`layout.html`\ 파일을 조작함으로써 HTML 페이지의 레이아웃을 바꿀 수 있다.
다음 예는 책갈피로서 기능하는 사이드바(sidebar)에 "색인" 항목이 추가되게 한다.

::

  {% extends "!layout.html" %}

  {% block menu %}
    {{ super() }}
    <a href="{{ pathto("genindex") }}">{{ _('Index') }}</a>
  {% endblock %}

스핑크스의 레이텍 모듈
-----------------------

modules 디렉토리에 있는 :index:`writer_latex.py`\ 와 :index:`builder_latex.py`\ 는 레이텍 파일의 생성에 사용되는 스핑크스 모듈이다. 이 파일들은 스핑크스 패키지의 디렉토리로부터 복사되었다.
writer_latex.py의 원본은 writers/latex.py이고, builder_latex.py의 원본은 builders/latex.py이다. 일부 기능에서 원래 모듈과 다르게 작동하도록 이 파일들이 수정되었다. 그리고 원래 모듈 대신 이 파일들이 사용되도록 다음과 같이 설정되었다.

::

  import writer_latex
  sys.modules["sphinx.writers.latex"] = writer_latex
  import builder_latex
  sys.modules["sphinx.builders.latex"] = builder_latex

만약 스핑크스 패키지가 업그레이드된다면 이 파일들 또한 그에 따라 다시 만들어져야 한다.
:ref:`latexmodule`\ 에서 그에 대한 자세한 설명을 보라.

레이텍 스타일
-------------

이전 판은 레이텍 스타일 파일들을 빌드 디렉토리에 복사하도록 다음과 같은 설정을 사용했다. 

::

  latex_additional_files = ['../_templates/hzguide.cls', '../_templates/karisphinx.sty']

이 판은 이 방법을 더 이상 사용하지 않는다. :ref:`texini`\ 를 보라.