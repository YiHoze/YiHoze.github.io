***************
소프트웨어 설치
***************

필요 소프트웨어
===============

* 파이썬 배포판: `WinPython 3.5.2.2Qt5 <https://winpython.github.io/>`_
* 파이썬 패키지

  * sphinx 1.6.3
  * nbconvert 5.1.1

* 스핑크스 확장 패키지

  * sphinx.ext.autodoc
  * sphinx.ext.autosummary
  * sphinx.ext.doctest
  * sphinx.ext.mathjax
  * sphinx.ext.viewcode
  * sphinxcontrib.bibtex 0.3.5
  * sphinxcontrib.blockdiag
  * nbsphinx 0.2.14
  * numpydoc

* 자바스크립트 `MathJax <https://www.mathjax.org/>`_
* 텍 배포판: `TeX Live 2017 <https://www.tug.org/texlive/>`_
* PDF 뷰어: `SumatraPDF <https://www.sumatrapdfreader.org/free-pdf-reader.html>`_
* 그래픽 소프트웨어

  * `Inkscape <https://inkscape.org/ko/>`_
  * `ImageMagick <http://www.imagemagick.org/script/index.php>`_

파이썬 패키지
=============

인터넷에 연결된 환경에서라면, 명령행에서 다음과 같은 방법으로 파이썬 패키지들을 설치하거나 업그레이드한다.

::

  #>pip install sphinxcontrib.blockdiag
  #>pip install --upgrade sphinxcontrib.blockdiag

인터넷 접근이 허용되지 않는 환경에서라면, 파이썬 패키지를 복사하여 다음과 같은 방법으로 설치한다.

::

  #>pip install sphinxcontrib-blockdiag-1.5.5.tar.gz

MathJax
========

MathJax는 웹 문서에서의 수식 표현을 위한 자바스크립트이다. 인터넷을 통해 특정 수식의 표현에 필요한 스크립트와 폰트를 가져오는 것이 일반적으로 사용되는 방법이다. 그러나 인터넷 연결이 허용되지 않는 환경에서는 MathJax 전부를 설치해야 한다.

.. _TeXLive:

텍 라이브
=========

:index:`TeX Live 2017`\ 을 권장한다. 최신 버전의 ISO 이미지 파일을 `네이버 <http://mirror.navercorp.com/CTAN/systems/texlive/Images>`_\ 나 `CTAN <http://www.ctan.org/tex-archive/systems/texlive/Images>`_\ 에서 내려받을 수 있다.
레이텍 프로그램들의 경로가 PATH 환경 변수에 포함되어 있어야 한다.

::

  C:\texlive\2017\bin\win32

사용자가 만든 스타일 파일을 로컬 TEXMF 디렉토리에 넣어두면, 어느 작업 디렉토리에서나 그 스타일 파일을 불러올 수 있다.

::

  C:\texlive\texmf-local\tex\latex\local
  #>mktexlsr

각 상위 TEXMF 디렉토리에는 :index:`ls-R` 파일이 있다. 이 파일은 일종의 데이터베이스로서 하위 디렉토리에 있는 파일들의 목록이다. 레이텍은 ls-R 파일들을 참조하여 지정된 스타일 파일들을 불러온다. 같은 이름의 파일이 있다면 가정 먼저 발견된 것을 불러오는데, 로컬 디렉토리가 우선 순위를 갖는다.
:index:`mktexlsr.exe`\ 는 TEXMF 디렉토리 전체를 검색하여 ls-R 데이터베이스를 갱신한다.
사용자 파일을 복사한 뒤에 사용자 파일을 ls-R 데이터베이스에 등록하기 위해 mktexlsr을 실행해야 한다.
이 작업을 보다 쉽게 하고자  texini.exe가 만들어졌다. :ref:`texini`\를 보라.

더 편한 방법은 사용자 디렉토리를 :index:`TEXMFHOME` 변수에 설정하는 것이다. C:\texlive\2016\ 디렉토리에서 :index:`texmf.cnf` 파일을 열고 다음과 같이 추가한다.

::

  TEXMFHOME = D:/texmf

사용자 디렉토리는 ls-R 데이터베이스에 등록되지 않는다. 대신 레이텍은 실행될 때마다 사용자 디렉토리를 가장 먼저 검색하고 거기에서 발견된 파일들을 사용한다.
사용자 디렉토리의 구조 역시 TEXMF 디렉토리와 동일해야 한다. 예를 들어 이 문서와 함께 제공되는 클래스 파일과 스타일 파일은 다음과 같은 디렉토리에 위치해야 한다.

::

  D:\texmf\tex\latex\KARI\

::

  D:
  +--- texmf
       +--- tex
            +--- latex
                 +--- kari
                      - hzguide.cls
                      - karisphinx.sty
                      - karijupyter.sty
       +--- makeindex


.. _Sumatra-PDF:

SumatraPDF
==========

:index:`SumatraPDF`\ 는 아크로뱃과 달리 PDF 파일을 열 때 파일을 잠그지 않는다. 그래서 레이텍 컴파일을 위해 파일을 닫지 않아도 된다. 열려있는 파일이 갱신되면, 그에 따라 화면에 보이는 페이지도 즉각 바뀐다.

SumatraPDF는 :index:`인버스 서치` (\ :index:`inverse search`\ ) 기능을 지원한다. 화면에 보이는 페이지에서 특정 부분을 더블클릭하면 지정된 텍스트 에디터에서 소스 파일이 열리고 커서가 해당 텍스트에 위치하게 된다. 인버스 서치를 위해 함께 사용할 텍스트 에디터를 처음으로 지정하려면 명령행에서 다음과 같은 방법으로 SumatraPDF를 연다.

::

  #>SumatraPDF.exe -inverse-search "atom.cmd %f:%l"
  #>SumatraPDF.exe -inverse-search "code.exe -g %f:%l"
  #>SumatraPDF.exe -inverse-search "emeditor.exe /l %l %f"

텍스트 에디터(Path 환경 변수에 포함되어 있지 않다면 그 경로를 포함하여)와 그 에디터가 취하는 패러미터 형식을 지정한다. 패러미터 형식은 에디터에 따라 다르다.
``%f``\ 는 파일 경로를, ``%l``\ 은 행 번호를 나타낸다.
이 설정은 새로운 항목으로서 SumatraPDF의 옵션에 추가된다. 
다른 에디터를 사용하려면, **설정** > **옵션** 메뉴를 선택하고, 나타난 창에서 **명령줄 역방향 탐색 설정** 옵션을 변경한다.

레이텍 컴파일에서 다음과 같이 인버스 서치를 위한 옵션을 지정해야 한다.

::

  #>xelatex -synctex=1 foo.tex

이 설정을 보다 쉽게 하고자 texini.exe가 만들어졌다. :ref:`texini`\ 를 보라.

.. _fonts:

폰트
=====

PDF 문서의 생성을 위해 레이텍 클래스로서 :index:`hzguide.cls`\ 가 사용된다. 이 클래스는 한글 식자를 위해 KoPub 폰트를 사용한다. :index:`KoPub` 폰트를 설치한 다음에 fc-cache.exe 프로그램을 실행해야 한다. fc-cache는 xelatex을 위해 설치된 모든 폰트들의 캐시를 만든다.

::

  #>fc-cache -f -v


그래픽 소프트웨어
=================

.. _inkscape-svg:

잉크스케이프
------------

:index:`SVG`\ 는 벡터 포맷이기 때문에 화면을 확대하더라도 이미지의 선명도가 높게 유지된다. 주피터에서 PNG 또는 SVG 포맷으로 그래프 이미지를 출력하는 파이썬 코드를 작성할 수 있다. 문제는 PDF 문서에 SVG 이미지를 포함시킬 수 없다는 것이다. 그래서 SVG 파일을 레이텍이 처리할 수 있는 PDF로 변환해야 한다.

:index:`잉크스케이프`\ (\ :index:`Inkscape`\ )는 벡터 그래픽 소프트웨어이다. 잉크스케이프를 이용하여 블록 다이어그램 같은 그림을 만들 수 있을 뿐만 아니라 명령행에서 벡터 이미지 파일들을 다른 벡터 또는 비트맵 포맷으로 변환할 수 있다.

.. image:: images/Inkscape.png

잉크스케이프를 설치할 때 반드시 .msi 버전의 설치 파일을 사용해야 한다. 주피터는 다음과 같은 특정 레지스트리 키를 참조하여 잉크스케이프가 설치되어 있는지 판단한다.

``HKLM:\SOFTWARE\Classes\inkscape.svg\DefaultIcon``

다른 버전의 설치 파일은 이 레지스트리 키를 등록하지 않기 때문에 잉크스케이프가 설치되어 있어도 주피터가 그것을 사용할 수 없는 문제가 발생한다.

명령행에서 잉크스케이프를 이용하여 SVG 파일을 PDF로 바꾸는 방법은 다음과 같다.

::

  #>inkscape.com --export-pdf foo.pdf foo.svg


이미지매직
----------

컴퓨터 화면에서 캡쳐한 스크린샷의 화소 밀도는 대개 72 ppi (pixels per inch)이다. 가로가 800 픽셀인 이미지는 웹 브라우저에서 보기에 불편하지 않지만, PDF 문서에 넣기에 너무 크다. 일반적인 글줄 길이가 12 센티미터 내외인데 반해 그 이미지는 28 센티미터나 되기 때문이다. (800 pixels ÷ 72 ppi × 2.54 cm = 28 cm)

이 문제를 해결하는 가장 간단한 방법은 이미지의 화소 밀도를 100 ppc (pixels per centimeter) 정도로 바꾸는 것이다. 그러면 그 이미지가 8 센티미터로 줄어든다.

:index:`이미지매직`\ (\ :index:`ImageMagick`\ )은 명령행에서 사용하는 비트맵 그래픽 소프트웨어이다. 이미지매직을 이용하여 비트맵 이미지 파일들을 다른 비트맵 포맷으로 변환하거나 이미지 크기를 변경할 수 있다. 이미지매직을 이용하여 이미지 파일의 화소 밀도를 바꾸는 방법은 다음과 같다.

::

  #>magick.exe foo.png -units PixelsPerCentimeter -density 100 foo.png

:ref:`imgsize`\ 를 보라.
